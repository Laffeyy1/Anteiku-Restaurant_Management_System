/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PCB
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form User
     */
    public Admin() {
        initComponents();
        AdminTable();
        burrons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        AdminIDtxt = new javax.swing.JTextField();
        FNametxt = new javax.swing.JTextField();
        LNametxt = new javax.swing.JTextField();
        Unametxt = new javax.swing.JTextField();
        Pwordtxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Refreshbtn = new com.k33ptoo.components.KButton();
        Addbtn = new com.k33ptoo.components.KButton();
        Deletebtn = new com.k33ptoo.components.KButton();
        Updatebtn = new com.k33ptoo.components.KButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Admintbl = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        Logoutbtn = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        Orderbtn = new com.k33ptoo.components.KButton();
        Adminbtn = new com.k33ptoo.components.KButton();
        Salesbtn = new com.k33ptoo.components.KButton();
        Userbtn = new com.k33ptoo.components.KButton();
        jLabel12 = new javax.swing.JLabel();
        kButton1 = new com.k33ptoo.components.KButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1560, 920));
        setMinimumSize(new java.awt.Dimension(1560, 920));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Edit Admin");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 60, -1, -1));

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        jPanel2.setLayout(null);

        AdminIDtxt.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        AdminIDtxt.setEnabled(false);
        jPanel2.add(AdminIDtxt);
        AdminIDtxt.setBounds(41, 49, 170, 30);

        FNametxt.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jPanel2.add(FNametxt);
        FNametxt.setBounds(289, 49, 170, 30);

        LNametxt.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jPanel2.add(LNametxt);
        LNametxt.setBounds(550, 49, 170, 30);

        Unametxt.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jPanel2.add(Unametxt);
        Unametxt.setBounds(780, 50, 164, 30);

        Pwordtxt.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jPanel2.add(Pwordtxt);
        Pwordtxt.setBounds(41, 182, 170, 30);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel2.setText("AdminID");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(41, 29, 60, 16);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel3.setText("First Name:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(289, 29, 80, 16);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel4.setText("Last Name:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(550, 29, 80, 16);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel5.setText("Username:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(780, 30, 70, 16);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel6.setText("Password: ");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(41, 162, 80, 16);

        Refreshbtn.setBackground(new java.awt.Color(52, 52, 52));
        Refreshbtn.setText("Refresh");
        Refreshbtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Refreshbtn.setkAllowGradient(false);
        Refreshbtn.setkBackGroundColor(new java.awt.Color(52, 52, 52));
        Refreshbtn.setkBorderRadius(30);
        Refreshbtn.setkForeGround(new java.awt.Color(240, 240, 240));
        Refreshbtn.setkHoverForeGround(new java.awt.Color(51, 51, 51));
        Refreshbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshbtnActionPerformed(evt);
            }
        });
        jPanel2.add(Refreshbtn);
        Refreshbtn.setBounds(650, 280, 100, 30);

        Addbtn.setBackground(new java.awt.Color(52, 52, 52));
        Addbtn.setText("Add");
        Addbtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Addbtn.setkAllowGradient(false);
        Addbtn.setkBackGroundColor(new java.awt.Color(52, 52, 52));
        Addbtn.setkBorderRadius(30);
        Addbtn.setkForeGround(new java.awt.Color(240, 240, 240));
        Addbtn.setkHoverForeGround(new java.awt.Color(51, 51, 51));
        Addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbtnActionPerformed(evt);
            }
        });
        jPanel2.add(Addbtn);
        Addbtn.setBounds(130, 280, 100, 30);

        Deletebtn.setBackground(new java.awt.Color(52, 52, 52));
        Deletebtn.setText("Delete");
        Deletebtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Deletebtn.setkAllowGradient(false);
        Deletebtn.setkBackGroundColor(new java.awt.Color(52, 52, 52));
        Deletebtn.setkBorderRadius(30);
        Deletebtn.setkForeGround(new java.awt.Color(240, 240, 240));
        Deletebtn.setkHoverForeGround(new java.awt.Color(51, 51, 51));
        Deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebtnActionPerformed(evt);
            }
        });
        jPanel2.add(Deletebtn);
        Deletebtn.setBounds(310, 280, 100, 30);

        Updatebtn.setBackground(new java.awt.Color(52, 52, 52));
        Updatebtn.setText("Update");
        Updatebtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Updatebtn.setkAllowGradient(false);
        Updatebtn.setkBackGroundColor(new java.awt.Color(52, 52, 52));
        Updatebtn.setkBorderRadius(30);
        Updatebtn.setkForeGround(new java.awt.Color(240, 240, 240));
        Updatebtn.setkHoverForeGround(new java.awt.Color(51, 51, 51));
        Updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatebtnActionPerformed(evt);
            }
        });
        jPanel2.add(Updatebtn);
        Updatebtn.setBounds(480, 280, 100, 30);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 970, 370));

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));

        Admintbl.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        Admintbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Admin ID", "First Name", "Last Name", "Username", "Password"
            }
        ));
        Admintbl.setRequestFocusEnabled(false);
        Admintbl.setRowHeight(20);
        Admintbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdmintblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Admintbl);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 550, 970, 320));

        jLabel10.setBackground(new java.awt.Color(52, 52, 52));
        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(52, 52, 52));
        jLabel10.setText("X");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1530, 10, -1, -1));

        Logoutbtn.setBackground(new java.awt.Color(52, 52, 52));
        Logoutbtn.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Logoutbtn.setForeground(new java.awt.Color(52, 52, 52));
        Logoutbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/log-out-icon-27res_1.png"))); // NOI18N
        Logoutbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Logoutbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutbtnMouseClicked(evt);
            }
        });
        getContentPane().add(Logoutbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 860, -1, -1));

        jPanel5.setBackground(new java.awt.Color(52, 52, 52));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Orderbtn.setBackground(new java.awt.Color(52, 52, 52));
        Orderbtn.setText("ORDER");
        Orderbtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Orderbtn.setkAllowGradient(false);
        Orderbtn.setkBackGroundColor(new java.awt.Color(52, 52, 52));
        Orderbtn.setkBorderRadius(30);
        Orderbtn.setkForeGround(new java.awt.Color(240, 240, 240));
        Orderbtn.setkHoverForeGround(new java.awt.Color(51, 51, 51));
        Orderbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderbtnActionPerformed(evt);
            }
        });
        jPanel5.add(Orderbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 170, -1));

        Adminbtn.setBackground(new java.awt.Color(52, 52, 52));
        Adminbtn.setForeground(new java.awt.Color(52, 52, 52));
        Adminbtn.setText("EDIT ADMIN");
        Adminbtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Adminbtn.setkAllowGradient(false);
        Adminbtn.setkAllowTab(true);
        Adminbtn.setkBackGroundColor(new java.awt.Color(240, 240, 240));
        Adminbtn.setkBorderRadius(30);
        Adminbtn.setkForeGround(new java.awt.Color(51, 51, 51));
        Adminbtn.setkHoverColor(new java.awt.Color(240, 240, 240));
        Adminbtn.setkHoverForeGround(new java.awt.Color(51, 51, 51));
        Adminbtn.setkHoverStartColor(new java.awt.Color(240, 240, 240));
        Adminbtn.setkSelectedColor(new java.awt.Color(240, 240, 240));
        Adminbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminbtnActionPerformed(evt);
            }
        });
        jPanel5.add(Adminbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 170, -1));

        Salesbtn.setBackground(new java.awt.Color(52, 52, 52));
        Salesbtn.setText("SALES");
        Salesbtn.setActionCommand("ORDER");
        Salesbtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Salesbtn.setkAllowGradient(false);
        Salesbtn.setkBackGroundColor(new java.awt.Color(52, 52, 52));
        Salesbtn.setkBorderRadius(30);
        Salesbtn.setkForeGround(new java.awt.Color(240, 240, 240));
        Salesbtn.setkHoverForeGround(new java.awt.Color(51, 51, 51));
        Salesbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalesbtnActionPerformed(evt);
            }
        });
        jPanel5.add(Salesbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 170, -1));

        Userbtn.setBackground(new java.awt.Color(52, 52, 52));
        Userbtn.setText("EDIT USER");
        Userbtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Userbtn.setkAllowGradient(false);
        Userbtn.setkBackGroundColor(new java.awt.Color(52, 52, 52));
        Userbtn.setkBorderRadius(30);
        Userbtn.setkForeGround(new java.awt.Color(240, 240, 240));
        Userbtn.setkHoverForeGround(new java.awt.Color(51, 51, 51));
        Userbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserbtnActionPerformed(evt);
            }
        });
        jPanel5.add(Userbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 170, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/anteikusmol.png"))); // NOI18N
        jPanel5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        kButton1.setkAllowGradient(false);
        kButton1.setkBackGroundColor(new java.awt.Color(229, 199, 137));
        kButton1.setkBorderRadius(400);
        kButton1.setkEndColor(new java.awt.Color(229, 199, 137));
        kButton1.setkForeGround(new java.awt.Color(229, 199, 137));
        kButton1.setkHoverColor(new java.awt.Color(229, 199, 137));
        kButton1.setkHoverEndColor(new java.awt.Color(229, 199, 137));
        kButton1.setkHoverForeGround(new java.awt.Color(229, 199, 137));
        kButton1.setkHoverStartColor(new java.awt.Color(229, 199, 137));
        kButton1.setkIndicatorColor(new java.awt.Color(229, 199, 137));
        kButton1.setkPressedColor(new java.awt.Color(229, 199, 137));
        kButton1.setkSelectedColor(new java.awt.Color(229, 199, 137));
        kButton1.setkStartColor(new java.awt.Color(229, 199, 137));
        jPanel5.add(kButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 110, 100));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 920));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bgyea.png"))); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AdmintblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdmintblMouseClicked
        // TODO add your handling code here:
        int SelectedRow = Admintbl.getSelectedRow();
        DefaultTableModel tblModel = (DefaultTableModel)Admintbl.getModel();

        AdminIDtxt.setText(tblModel.getValueAt(SelectedRow,0).toString());
        FNametxt.setText(tblModel.getValueAt(SelectedRow,1).toString());
        LNametxt.setText(tblModel.getValueAt(SelectedRow, 2).toString());
        Unametxt.setText(tblModel.getValueAt(SelectedRow, 3).toString());
        Pwordtxt.setText(tblModel.getValueAt(SelectedRow, 4).toString());
    }//GEN-LAST:event_AdmintblMouseClicked

    private void AdminbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminbtnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_AdminbtnActionPerformed

    private void OrderbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderbtnActionPerformed
        // TODO add your handling code here:
        dispose();
        Order ord = new Order();
        ord.show();
    }//GEN-LAST:event_OrderbtnActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    private void AddbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbtnActionPerformed
        // TODO add your handling code here:
            try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://DESKTOP-AQ0ITDE\\MSSQLSERVER;databaseName=RMSproject;user=admin;password=root;encrypt=true;trustServerCertificate=true;";
            Connection con = DriverManager.getConnection(connectionUrl);
            String Fname = FNametxt.getText();
            String Lname = LNametxt.getText();
            String Uname = Unametxt.getText();
            String Pword = Pwordtxt.getText();
        
            if(FNametxt.getText().equals("")||LNametxt.getText().equals("")||Unametxt.getText().equals("")||Pwordtxt.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Error Adding User");
            }
            else{
            Statement stm = con.createStatement();
            String sql = "insert into admin_login values('"+Fname+"','"+Lname+"','"+Uname+"','"+Pword+"')";
            int rs = stm.executeUpdate(sql);
            
            AdminIDtxt.setText("");
            FNametxt.setText("");
            LNametxt.setText("");
            Unametxt.setText("");
            Pwordtxt.setText("");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
        Admintbl.setModel(new DefaultTableModel(null,new String[]{"AdminID","First Name","Last Name", "Username","Password"}));
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://DESKTOP-AQ0ITDE\\MSSQLSERVER;databaseName=RMSproject;user=admin;password=root;encrypt=true;trustServerCertificate=true;";
            Connection con = DriverManager.getConnection(connectionUrl);

            Statement stm = con.createStatement();
            String sql = "select * from admin_login";
            ResultSet rs = stm.executeQuery(sql);

            while(rs.next()){
                String AdminID = String.valueOf(rs.getInt("AdminID"));
                String First = rs.getString("Fname");
                String Last = rs.getString("Lname");
                String Username = rs.getString("Username");
                String Password = rs.getString("Passwords");

                String tbData[] = {AdminID,First,Last,Username,Password};
                DefaultTableModel A = (DefaultTableModel)Admintbl.getModel();
                A.addRow(tbData);

            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AddbtnActionPerformed

    private void DeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebtnActionPerformed
        // TODO add your handling code here:
        int SelectedRow = Admintbl.getSelectedRow();
        DefaultTableModel tblModel = (DefaultTableModel)Admintbl.getModel();
        
        String ID = tblModel.getValueAt(SelectedRow,0).toString();
        
            try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://DESKTOP-AQ0ITDE\\MSSQLSERVER;databaseName=RMSproject;user=admin;password=root;encrypt=true;trustServerCertificate=true;";
            Connection con = DriverManager.getConnection(connectionUrl);
            
        
            if(AdminIDtxt.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Error Adding User");
            }
            else{
            Statement stm = con.createStatement();
            String sql = "delete from admin_login where adminid = " + ID;
            int rs = stm.executeUpdate(sql);
            
            AdminIDtxt.setText("");
            FNametxt.setText("");
            LNametxt.setText("");
            Unametxt.setText("");
            Pwordtxt.setText("");
             
           }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        Admintbl.setModel(new DefaultTableModel(null,new String[]{"AdminID","First Name","Last Name", "Username","Password"}));
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://DESKTOP-AQ0ITDE\\MSSQLSERVER;databaseName=RMSproject;user=admin;password=root;encrypt=true;trustServerCertificate=true;";
            Connection con = DriverManager.getConnection(connectionUrl);

            Statement stm = con.createStatement();
            String sql = "select * from admin_login";
            ResultSet rs = stm.executeQuery(sql);

            while(rs.next()){
                String AdminID = String.valueOf(rs.getInt("AdminID"));
                String First = rs.getString("Fname");
                String Last = rs.getString("Lname");
                String Username = rs.getString("Username");
                String Password = rs.getString("Passwords");

                String tbData[] = {AdminID,First,Last,Username,Password};
                DefaultTableModel A = (DefaultTableModel)Admintbl.getModel();
                A.addRow(tbData);

            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DeletebtnActionPerformed

    private void UpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatebtnActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://DESKTOP-AQ0ITDE\\MSSQLSERVER;databaseName=RMSproject;user=admin;password=root;encrypt=true;trustServerCertificate=true;";
            Connection con = DriverManager.getConnection(connectionUrl);
            String Fname = FNametxt.getText();
            String Lname = LNametxt.getText();
            String Uname = Unametxt.getText();
            String Pword = Pwordtxt.getText();
            String ID = AdminIDtxt.getText();
        
            if(FNametxt.getText().equals("")||LNametxt.getText().equals("")||Unametxt.getText().equals("")||Pwordtxt.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Error Updating User");
            }
            else{
            Statement stm = con.createStatement();
            String sql = "update admin_login set Fname = '"+Fname+"',Lname = '"+Lname+"',Username ='"+Uname+"',Passwords = '"+Pword+"'where adminid = '"+ID+"'";
            int rs = stm.executeUpdate(sql);
            
            AdminIDtxt.setText("");
            FNametxt.setText("");
            LNametxt.setText("");
            Unametxt.setText("");
            Pwordtxt.setText("");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
        Admintbl.setModel(new DefaultTableModel(null,new String[]{"AdminID","First Name","Last Name", "Username","Password"}));
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://DESKTOP-AQ0ITDE\\MSSQLSERVER;databaseName=RMSproject;user=admin;password=root;encrypt=true;trustServerCertificate=true;";
            Connection con = DriverManager.getConnection(connectionUrl);

            Statement stm = con.createStatement();
            String sql = "select * from admin_login";
            ResultSet rs = stm.executeQuery(sql);

            while(rs.next()){
                String AdminID = String.valueOf(rs.getInt("AdminID"));
                String First = rs.getString("Fname");
                String Last = rs.getString("Lname");
                String Username = rs.getString("Username");
                String Password = rs.getString("Passwords");

                String tbData[] = {AdminID,First,Last,Username,Password};
                DefaultTableModel A = (DefaultTableModel)Admintbl.getModel();
                A.addRow(tbData);

            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_UpdatebtnActionPerformed

    private void RefreshbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshbtnActionPerformed
        // TODO add your handling code here:
       Admintbl.setModel(new DefaultTableModel(null,new String[]{"AdminID","First Name","Last Name", "Username","Password"}));
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://DESKTOP-AQ0ITDE\\MSSQLSERVER;databaseName=RMSproject;user=admin;password=root;encrypt=true;trustServerCertificate=true;";
            Connection con = DriverManager.getConnection(connectionUrl);

            Statement stm = con.createStatement();
            String sql = "select * from admin_login";
            ResultSet rs = stm.executeQuery(sql);

            while(rs.next()){
                String AdminID = String.valueOf(rs.getInt("AdminID"));
                String First = rs.getString("Fname");
                String Last = rs.getString("Lname");
                String Username = rs.getString("Username");
                String Password = rs.getString("Passwords");

                String tbData[] = {AdminID,First,Last,Username,Password};
                DefaultTableModel tblModel = (DefaultTableModel)Admintbl.getModel();
                tblModel.addRow(tbData);

            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RefreshbtnActionPerformed

    private void LogoutbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutbtnMouseClicked
        // TODO add your handling code here:
        dispose();
        Login log = new Login();
        log.show();
    }//GEN-LAST:event_LogoutbtnMouseClicked

    private void UserbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserbtnActionPerformed
        // TODO add your handling code here:
        dispose();
        User us = new User();
        us.show();
    }//GEN-LAST:event_UserbtnActionPerformed

    private void SalesbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalesbtnActionPerformed
        // TODO add your handling code here:
        dispose();
        Sales sa = new Sales();
        sa.show();   
    }//GEN-LAST:event_SalesbtnActionPerformed

    public void AdminTable(){
    try {
            // TODO add your handling code here:
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://DESKTOP-AQ0ITDE\\MSSQLSERVER;databaseName=RMSproject;user=admin;password=root;encrypt=true;trustServerCertificate=true;";
            Connection con = DriverManager.getConnection(connectionUrl);

            Statement stm = con.createStatement();
            String sql = "select * from admin_login";
            ResultSet rs = stm.executeQuery(sql);
            
            while(rs.next()){
                String AdminID = String.valueOf(rs.getInt("AdminID"));
                String First = rs.getString("Fname");
                String Last = rs.getString("Lname");
                String Username = rs.getString("Username");
                String Password = rs.getString("Passwords");
                
                String tbData[] = {AdminID,First,Last,Username,Password};
                DefaultTableModel tblModel = (DefaultTableModel)Admintbl.getModel();
                tblModel.addRow(tbData);
                
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
        }
}
        public void burrons(){
        Orderbtn.setBorderPainted(false);
        Userbtn.setBorderPainted(false);
        Adminbtn.setBorderPainted(false);
        Refreshbtn.setBorderPainted(false);
        Salesbtn.setBorderPainted(false);
        Addbtn.setBorderPainted(false);
        Deletebtn.setBorderPainted(false);
        Updatebtn.setBorderPainted(false);
        Refreshbtn.setBorderPainted(false);
        kButton1.setBorderPainted(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.k33ptoo.components.KButton Addbtn;
    private javax.swing.JTextField AdminIDtxt;
    private com.k33ptoo.components.KButton Adminbtn;
    private javax.swing.JTable Admintbl;
    private com.k33ptoo.components.KButton Deletebtn;
    private javax.swing.JTextField FNametxt;
    private javax.swing.JTextField LNametxt;
    private javax.swing.JLabel Logoutbtn;
    private com.k33ptoo.components.KButton Orderbtn;
    private javax.swing.JTextField Pwordtxt;
    private com.k33ptoo.components.KButton Refreshbtn;
    private com.k33ptoo.components.KButton Salesbtn;
    private javax.swing.JTextField Unametxt;
    private com.k33ptoo.components.KButton Updatebtn;
    private com.k33ptoo.components.KButton Userbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.k33ptoo.components.KButton kButton1;
    // End of variables declaration//GEN-END:variables
}
